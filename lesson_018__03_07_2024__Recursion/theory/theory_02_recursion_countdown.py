"""Рекурсия означает, что на некоторых шагах функция вызывает саму себя.

Рекурсия состоит из

1. Base Case (Базовый случай)
2. Recursive Case (Рекурсивный случай)

Важно: конечная рекурсия должна сходиться к базовому случаю.

Альтернатива рекурсии: итеративная функция, которая с помощью цикла делает то,
что рекурсия осуществляет вызовом самой себя.


Рассмотрим пример итеративной функции обратного отсчёта:
"""


def countdown_loop(n):
    for i in range(n, -1, -1):
        if i > 0:
            print(i)
        else:
            print("Done!")


countdown_loop(2)


"""Попробуем создать на базе этой итеративной функции рекурсивную функцию:"""


def countdown_recursion(n):
    if n <= 0:
        print("Done!")
    else:
        print(n)
        return countdown_recursion(n-1)


countdown_recursion(2)
